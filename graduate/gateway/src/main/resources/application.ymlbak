server:
  port: 8087

spring:
#  main:
#    web-application-type: reactive
#  datasource:
#    type: com.zaxxer.hikari.HikariDataSource
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/graduation
#    username: root
#    password: 12344
  application:
    name: gateway-service # user服务的服务名称
  cloud:
    nacos:
      server-addr: localhost:8848 # nacos服务地址
    gateway:
      routes: # 网管的路由配置
        - id: userservice # 路由id, 自定义, 只要唯一即可
          uri: lb://user-service # 路由目标地址,lb(loadbalance)是负载均衡, 后面跟服务名称
          predicates: # 路由断言,判断请求是否符合路由规则的条件
            - Path=/user/** # 按照路径匹配,只要以/user/开头就符合要求
#          filters: # 路由过滤器
#            - AddRequestHeader=Truth,Hello filter # 添加请求头
#      default-filters: # 默认过滤器,会对所有路由请求都生效  过滤器执行顺序: default > 路由 > global
#        - xxxx: xxxx
      globalcors: # 全局跨域处理
        add-to-simple-url-handler-mapping: true # 解决options(对服务器的询问:询问是否允许跨域)请求被拦截问题
        corsConfigurations:
          '[/**]':
            allowedOrigins: # 允许哪些网站的跨域请求
              - "http://localhost:0627"
              - "http://www.baidu.com"
            allowedMethods: # 允许的跨域ajax的请求方式
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
            allowedHeaders: "*" # 允许在请求中携带的头信息
            allowedCredentials: true # 是否允许携带cookie
            maxAge: 360000 # 这次跨域请求检测的有效期(秒)

#ribbon:
#  eager-load:
#    enabled: true # 开启饥饿加载
#    clients:      # 指定饥饿加载服务名称
#      - userservice

# 消费者 中设置负载均衡规则,这个配置会优先寻找与自己同集群的服务
# 比如这里需要对提供者进行请求:
#userservice:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.alibaba.cloud.nacos.ribbon.NacosRule # 负载均衡规则
